#!/bin/bash


module load amber
name=$1
cpd=$2
nwindow=$3
#rm $name-box-lengths
for iwindow in `seq 1 $nwindow` 
do
	echo "solvating frame $iwindow"
	#rm leap.log
	sed -e "s/INH/CPD/g" -e "s/H   ILE X   2/H1  ILE X   2/1"  frames/$name-window-$iwindow.pdb | \
		awk 'BEGIN {flag=1} {if ((substr($0,18,3)=="CPD") && flag) {print "TER"; flag=0}; print $0}' > \
		frames2/$name-window-$iwindow.pdb
	#trial run of solvation with no ions -- this quits with an error, but we get to the point where we can have the mass
	sed -e "s/:name;/$name/g" -e "s/:cpd;/$cpd/g" -e "s/:iwindow;/$iwindow/g" \
		-e "s/:nna;/0/g" -e "s/:ncl;/0/g" tleap-explicit-template.in > io/tleap-explicit-$iwindow.in
	tleap -f io/tleap-explicit-$iwindow.in > /dev/null
	#exit
	#calculate the box size needed to achieve a density of 1.03 g/mL, and the number of ions 
	volume=`grep -i "Total mass" leap.log | awk '{print $3/(1.03*.602)}'`
	boxl=`echo $volume | awk '{print ($1)^(1/3)}'`
	echo "$iwindow $boxl" >> $name-box-lengths
	#number of ions to give 150 mM NaCl, neutralize charge 
	charge=`grep -i "Total perturbed charge" leap.log | awk '{print $4}'`
	#echo $charge
	echo $volume
	#(vol A^3) * (0.15 mol/L) * (1 L/.001 m^3) * (1 m / 10^10 A)^3 * (6.022*10^23 / mol)
	nion=`echo $volume $charge | awk '{nion=0.15*$1*6.022e-4; if ($2<0) {nna=int(nion-$2+0.5); ncl=int(nion+0.5)} else {nna=int(nion+0.5); ncl=int(nion+$2+0.5)}; print nna,ncl}'`
	nna=`echo $nion | awk '{print $1}'`
	ncl=`echo $nion | awk '{print $2}'`
	sed -e "s/:name;/$name/g" -e "s/:cpd;/$cpd/g" -e "s/:iwindow;/$iwindow/g" \
		-e "s/:nna;/$nna/g" -e "s/:ncl;/$ncl/g" tleap-explicit-template.in > io/tleap-explicit-$iwindow.in
	ok="false"
	counter=1
	while [ "ok" != "true" ];
	do
		rm leap.log
       		tleap -f io/tleap-explicit-$iwindow.in > /dev/null
		mv leap.log io/tleap-explicit-$iwindow.out
		prmtop=data/$name-window-$iwindow-solvated.prmtop
        	natomprm=`head -n7 $prmtop | tail -n1 | awk '{print $1}'`
        	pdb=data/$name-window-$iwindow-solvated.pdb
        	natompdb=`grep -i "atom" data/$name-window-$iwindow-solvated.pdb | wc -l`
        	if [ "$natomprm" -eq "$natompdb" ]; then
			break
		else
        	        echo "trial $counter incorrect atom counts: $iwindow $natomprm $natompdb"
			counter=`expr $counter + 1`
			if [ "$counter" -gt "5" ]; then	
				echo "tried too many times, aborting"
				break
			fi
        	fi
	done
	pdbref=../ref/$name-window-$iwindow-solvated-ref.pdb
	awk -f setup-ref.awk  $pdb > $pdbref
	#exit
	#mv -v data/$name-window-$iwindow-solvated.* /scratch/jmsc87/pyk2/umbrella-amber/solvate2/data
done	
